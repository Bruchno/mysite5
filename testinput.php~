<?php
include 'header.php';
if (isset($_POST['newsbutton']))
{
	$news = $_POST['redaction_text'];
	$imagejson = $_POST['imageArray'];
	
	$dbnew = dbconnect();
	$s = $dbnew->query("SELECT * FROM records");//Найдем номер записи
	$n = 0;
	while ($row = $s->fetch(PDO::FETCH_ASSOC))
	{
		if ($n < $row['RECORD_ID'])
		{
			$n = $row['RECORD_ID'];
		}
	}
	$RECORD_ID = $n + 1;// нашли или присвоили 1
	$dbnew = null;// Закрыли соединение
	date_default_timezone_set('UTC');
	$dey = date("y.m.d");// Здесь надо определить переменную для даты
	$un = $_SESSION['user'];
	$dbh = dbconnect();//Следующее соединение для нахождения номера пользователя
			$query = "SELECT * FROM users";
			$stm = $dbh->query($query);
			while ($r = $stm->fetch(PDO::FETCH_ASSOC))
			{
				if ($r['USER'] == $un)
				{
					$id_user = $r['ID'];
				}
			}
			$dbh = null;// Нашли, закрыли
			
			$dpo = dbconnect();//Вставляем запись в новости
			$st = $pdo->prepare("INSERT INTO records (DATA, ID_USER, RECORD_ID, TEXT_RECORD) 
			VALUES (:DATA, :ID_USER, :RECORD_ID, :TEXT_RECORD)");
			$st->bindParam(':DATA', $dey);
			$st->bindParam(':ID_USER', $id_user);
			$st->bindParam(':RECORD_ID', $RECORD_ID);
			$st->bindParam(':TEXT_RECORD', $news);
			$st->execute();
			$pdo = null;
			
			
			$arrayImage = explode(", ", $imagejson);//Вставляем картинки
			$dbn = dbconnect();
			for ($i = 0; $i< count($arrayImage); $i++)
			{
				$stn = $dbn->prepare("INSERT INTO images (imagepath, id_record)
				VALUES (:imagepath, :id_record)");
				$stn->bindParam(':imagepath', $img_record);
				$stn->bindParam(':id_record', $RECORD_ID);
				$stn->execute();
				echo '<br> Картинка №'.$i .' '.$arrayImage[$i]. ";";
			}
		}
	$dbn = null;
			
	echo 'Получен текст: '.$news ." , номер пользователя ".$id_user." и дата записи ".$dey;
	echo '</br> Список картинок: '.$imagejson.'</br>Номер записи: '.$RECORD_ID;
	$str = $un.", Ваш запис №:".$RECORD_ID." від ".$dey;
	echo $str;
	$db = dbconnect();
$st = $db->prepare("INSERT INTO count_information (record, count_view, count_like, count_notlike) 
VALUES (:record, :count_view, :count_like, :count_notlike)");
$n = 0;
$st->bindParam(':record', $RECORD_ID);
$st->bindParam(':count_view', $n);
$st->bindParam(':count_like', $n);
$st->bindParam(':count_notlike', $n);
$st->execute();
recording($id_user, $RECORD_ID);
countstatistic($RECORD_ID);
}
?>